// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheOracle2.UserContent;

#nullable disable

namespace TheOracle2.Migrations
{
    [DbContext(typeof(EFContext))]
    [Migration("20220208161311_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("NOCASE")
                .HasAnnotation("ProductVersion", "6.0.1");

            modelBuilder.Entity("AssetOracleGuild", b =>
                {
                    b.Property<int>("AssetsId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("OracleGuildsOracleGuildId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AssetsId", "OracleGuildsOracleGuildId");

                    b.HasIndex("OracleGuildsOracleGuildId");

                    b.ToTable("AssetOracleGuild");
                });

            modelBuilder.Entity("MoveOracleGuild", b =>
                {
                    b.Property<int>("MovesId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("OracleGuildsOracleGuildId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MovesId", "OracleGuildsOracleGuildId");

                    b.HasIndex("OracleGuildsOracleGuildId");

                    b.ToTable("MoveOracleGuild");
                });

            modelBuilder.Entity("OracleData.Ability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AlterPropertiesId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AssetId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CounterId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Input")
                        .HasColumnType("TEXT");

                    b.Property<int?>("MoveId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AlterPropertiesId");

                    b.HasIndex("AssetId");

                    b.HasIndex("CounterId");

                    b.HasIndex("MoveId");

                    b.ToTable("AssetAbilities");
                });

            modelBuilder.Entity("OracleData.AlterMove", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AbilityId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AnyMove")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AbilityId");

                    b.ToTable("AlterMove");
                });

            modelBuilder.Entity("OracleData.AlterProperties", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ConditionMeterId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TrackId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ConditionMeterId");

                    b.HasIndex("TrackId");

                    b.ToTable("AlterProperties");
                });

            modelBuilder.Entity("OracleData.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Aliases")
                        .HasColumnType("TEXT");

                    b.Property<string>("AssetType")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ConditionMeterId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CounterId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Input")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Modules")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SelectId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TrackId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ConditionMeterId");

                    b.HasIndex("CounterId");

                    b.HasIndex("SelectId");

                    b.HasIndex("TrackId");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("OracleData.AssetMove", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Asset")
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<bool>("ProgressMove")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AssetMove");
                });

            modelBuilder.Entity("OracleData.AssetStatOptions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Legacies")
                        .HasColumnType("TEXT");

                    b.Property<string>("Resources")
                        .HasColumnType("TEXT");

                    b.Property<string>("Select")
                        .HasColumnType("TEXT");

                    b.Property<string>("Selection")
                        .HasColumnType("TEXT");

                    b.Property<string>("Stats")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AssetStatOptions");
                });

            modelBuilder.Entity("OracleData.AssetTrigger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AlterMoveId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AssetMoveId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Details")
                        .HasColumnType("TEXT");

                    b.Property<int?>("StatOptionsId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AlterMoveId");

                    b.HasIndex("AssetMoveId");

                    b.HasIndex("StatOptionsId");

                    b.ToTable("AssetTrigger");
                });

            modelBuilder.Entity("OracleData.ConditionMeter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Conditions")
                        .HasColumnType("TEXT");

                    b.Property<int>("Max")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("StartsAt")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ConditionMeter");
                });

            modelBuilder.Entity("OracleData.Counter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Max")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("StartsAt")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Counter");
                });

            modelBuilder.Entity("OracleData.Select", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Options")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Select");
                });

            modelBuilder.Entity("OracleData.Track", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("StartsAt")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Track");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.AddTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChanceTableId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Templatetype")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChanceTableId")
                        .IsUnique();

                    b.ToTable("AddTemplate");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.Attributes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AddTemplateId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DerelictType")
                        .HasColumnType("TEXT");

                    b.Property<int?>("GameObjectId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AddTemplateId")
                        .IsUnique();

                    b.HasIndex("GameObjectId")
                        .IsUnique();

                    b.ToTable("Attributes");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.ChanceTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Assets")
                        .HasColumnType("TEXT");

                    b.Property<int>("Chance")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Details")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<int?>("OracleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PartOfSpeech")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TableId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TablesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OracleId");

                    b.HasIndex("TablesId");

                    b.ToTable("ChanceTables");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.GameObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ChanceTableId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Objecttype")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SuggestId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ChanceTableId");

                    b.HasIndex("SuggestId");

                    b.ToTable("GameObject");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.Inherit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT");

                    b.Property<string>("Exclude")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("OracleInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Requires")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SubcategoryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OracleInfoId");

                    b.HasIndex("SubcategoryId");

                    b.ToTable("Inherit");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.Move", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsProgressMove")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Oracle")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Moves");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.MoveStatOptions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Legacies")
                        .HasColumnType("TEXT");

                    b.Property<string>("Method")
                        .HasColumnType("TEXT");

                    b.Property<string>("Progress")
                        .HasColumnType("TEXT");

                    b.Property<string>("Stats")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MoveStatOptions");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.MoveTrigger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Details")
                        .HasColumnType("TEXT");

                    b.Property<int?>("MoveId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("StatOptionsId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MoveId");

                    b.HasIndex("StatOptionsId");

                    b.ToTable("MoveTrigger");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.MultipleRolls", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Allowduplicates")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChanceTableId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ChanceTableId")
                        .IsUnique();

                    b.ToTable("MultipleRolls");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.Oracle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Aliases")
                        .HasColumnType("TEXT");

                    b.Property<bool>("AllowDuplicateRolls")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContentTags")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Group")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Initial")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Maxrolls")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Minrolls")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("OracleInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OracleType")
                        .HasColumnType("TEXT");

                    b.Property<string>("PartOfSpeech")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Repeatable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Requires")
                        .HasColumnType("TEXT");

                    b.Property<string>("SelectTableBy")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SourceId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SubcategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Subgroup")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OracleInfoId");

                    b.HasIndex("SourceId");

                    b.HasIndex("SubcategoryId");

                    b.ToTable("Oracles");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.OracleInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Aliases")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<ulong?>("OracleGuildId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SourceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tags")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OracleGuildId");

                    b.HasIndex("SourceId");

                    b.ToTable("OracleInfo");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.OracleStub", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ChanceTableId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Subcategory")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SuggestId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ChanceTableId");

                    b.HasIndex("SuggestId");

                    b.ToTable("OracleStubs");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.Source", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Page")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Source");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.Special", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AssetStatOptionsId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MoveTriggerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AssetStatOptionsId");

                    b.HasIndex("MoveTriggerId");

                    b.ToTable("Special");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.Subcategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Aliases")
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT");

                    b.Property<string>("ContentTags")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Displayname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("OracleInfoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Requires")
                        .HasColumnType("TEXT");

                    b.Property<string>("SampleNames")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SourceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SubcategoryOf")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OracleInfoId");

                    b.HasIndex("SourceId");

                    b.ToTable("Subcategory");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.Suggest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChanceTableId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LocationTheme")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChanceTableId")
                        .IsUnique();

                    b.ToTable("Suggest");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.Tables", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Aliases")
                        .HasColumnType("TEXT");

                    b.Property<string>("Displayname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("OracleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Requires")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OracleId");

                    b.ToTable("Tables");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.UseWith", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT");

                    b.Property<string>("Group")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("OracleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OracleId");

                    b.ToTable("UseWith");
                });

            modelBuilder.Entity("TheOracle2.GameObjects.PlayerCharacter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("ChannelId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("DiscordGuildId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Edge")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Health")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Heart")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<string>("Impacts")
                        .HasColumnType("TEXT");

                    b.Property<int>("Iron")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("MessageId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Momentum")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Shadow")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Spirit")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Supply")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Wits")
                        .HasColumnType("INTEGER");

                    b.Property<int>("XpGained")
                        .HasColumnType("INTEGER");

                    b.Property<int>("XpSpent")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MessageId");

                    b.ToTable("PlayerCharacters");
                });

            modelBuilder.Entity("TheOracle2.UserContent.OracleGuild", b =>
                {
                    b.Property<ulong>("OracleGuildId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("OracleGuildId");

                    b.ToTable("OracleGuilds");
                });

            modelBuilder.Entity("AssetOracleGuild", b =>
                {
                    b.HasOne("OracleData.Asset", null)
                        .WithMany()
                        .HasForeignKey("AssetsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TheOracle2.UserContent.OracleGuild", null)
                        .WithMany()
                        .HasForeignKey("OracleGuildsOracleGuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MoveOracleGuild", b =>
                {
                    b.HasOne("TheOracle2.DataClasses.Move", null)
                        .WithMany()
                        .HasForeignKey("MovesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TheOracle2.UserContent.OracleGuild", null)
                        .WithMany()
                        .HasForeignKey("OracleGuildsOracleGuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OracleData.Ability", b =>
                {
                    b.HasOne("OracleData.AlterProperties", "AlterProperties")
                        .WithMany()
                        .HasForeignKey("AlterPropertiesId");

                    b.HasOne("OracleData.Asset", null)
                        .WithMany("Abilities")
                        .HasForeignKey("AssetId");

                    b.HasOne("OracleData.Counter", "Counter")
                        .WithMany()
                        .HasForeignKey("CounterId");

                    b.HasOne("OracleData.AssetMove", "Move")
                        .WithMany()
                        .HasForeignKey("MoveId");

                    b.Navigation("AlterProperties");

                    b.Navigation("Counter");

                    b.Navigation("Move");
                });

            modelBuilder.Entity("OracleData.AlterMove", b =>
                {
                    b.HasOne("OracleData.Ability", null)
                        .WithMany("AlterMoves")
                        .HasForeignKey("AbilityId");
                });

            modelBuilder.Entity("OracleData.AlterProperties", b =>
                {
                    b.HasOne("OracleData.ConditionMeter", "ConditionMeter")
                        .WithMany()
                        .HasForeignKey("ConditionMeterId");

                    b.HasOne("OracleData.Track", "Track")
                        .WithMany()
                        .HasForeignKey("TrackId");

                    b.Navigation("ConditionMeter");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("OracleData.Asset", b =>
                {
                    b.HasOne("OracleData.ConditionMeter", "ConditionMeter")
                        .WithMany()
                        .HasForeignKey("ConditionMeterId");

                    b.HasOne("OracleData.Counter", "Counter")
                        .WithMany()
                        .HasForeignKey("CounterId");

                    b.HasOne("OracleData.Select", "Select")
                        .WithMany()
                        .HasForeignKey("SelectId");

                    b.HasOne("OracleData.Track", "Track")
                        .WithMany()
                        .HasForeignKey("TrackId");

                    b.Navigation("ConditionMeter");

                    b.Navigation("Counter");

                    b.Navigation("Select");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("OracleData.AssetTrigger", b =>
                {
                    b.HasOne("OracleData.AlterMove", null)
                        .WithMany("Triggers")
                        .HasForeignKey("AlterMoveId");

                    b.HasOne("OracleData.AssetMove", null)
                        .WithMany("Triggers")
                        .HasForeignKey("AssetMoveId");

                    b.HasOne("OracleData.AssetStatOptions", "StatOptions")
                        .WithMany()
                        .HasForeignKey("StatOptionsId");

                    b.Navigation("StatOptions");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.AddTemplate", b =>
                {
                    b.HasOne("TheOracle2.DataClasses.ChanceTable", "ChanceTable")
                        .WithOne("Addtemplate")
                        .HasForeignKey("TheOracle2.DataClasses.AddTemplate", "ChanceTableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChanceTable");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.Attributes", b =>
                {
                    b.HasOne("TheOracle2.DataClasses.AddTemplate", "AddTemplate")
                        .WithOne("Attributes")
                        .HasForeignKey("TheOracle2.DataClasses.Attributes", "AddTemplateId");

                    b.HasOne("TheOracle2.DataClasses.GameObject", "GameObject")
                        .WithOne("Attributes")
                        .HasForeignKey("TheOracle2.DataClasses.Attributes", "GameObjectId");

                    b.Navigation("AddTemplate");

                    b.Navigation("GameObject");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.ChanceTable", b =>
                {
                    b.HasOne("TheOracle2.DataClasses.Oracle", "Oracle")
                        .WithMany("Table")
                        .HasForeignKey("OracleId");

                    b.HasOne("TheOracle2.DataClasses.Tables", "Tables")
                        .WithMany("Table")
                        .HasForeignKey("TablesId");

                    b.Navigation("Oracle");

                    b.Navigation("Tables");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.GameObject", b =>
                {
                    b.HasOne("TheOracle2.DataClasses.ChanceTable", "ChanceTable")
                        .WithMany("Gameobject")
                        .HasForeignKey("ChanceTableId");

                    b.HasOne("TheOracle2.DataClasses.Suggest", "Suggest")
                        .WithMany("Gameobject")
                        .HasForeignKey("SuggestId");

                    b.Navigation("ChanceTable");

                    b.Navigation("Suggest");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.Inherit", b =>
                {
                    b.HasOne("TheOracle2.DataClasses.OracleInfo", "OracleInfo")
                        .WithMany("Inherits")
                        .HasForeignKey("OracleInfoId");

                    b.HasOne("TheOracle2.DataClasses.Subcategory", "Subcategory")
                        .WithMany("Inherits")
                        .HasForeignKey("SubcategoryId");

                    b.Navigation("OracleInfo");

                    b.Navigation("Subcategory");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.MoveTrigger", b =>
                {
                    b.HasOne("TheOracle2.DataClasses.Move", null)
                        .WithMany("Triggers")
                        .HasForeignKey("MoveId");

                    b.HasOne("TheOracle2.DataClasses.MoveStatOptions", "StatOptions")
                        .WithMany()
                        .HasForeignKey("StatOptionsId");

                    b.Navigation("StatOptions");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.MultipleRolls", b =>
                {
                    b.HasOne("TheOracle2.DataClasses.ChanceTable", "ChanceTable")
                        .WithOne("Multiplerolls")
                        .HasForeignKey("TheOracle2.DataClasses.MultipleRolls", "ChanceTableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChanceTable");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.Oracle", b =>
                {
                    b.HasOne("TheOracle2.DataClasses.OracleInfo", "OracleInfo")
                        .WithMany("Oracles")
                        .HasForeignKey("OracleInfoId");

                    b.HasOne("TheOracle2.DataClasses.Source", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId");

                    b.HasOne("TheOracle2.DataClasses.Subcategory", "Subcategory")
                        .WithMany("Oracles")
                        .HasForeignKey("SubcategoryId");

                    b.Navigation("OracleInfo");

                    b.Navigation("Source");

                    b.Navigation("Subcategory");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.OracleInfo", b =>
                {
                    b.HasOne("TheOracle2.UserContent.OracleGuild", null)
                        .WithMany("Oracles")
                        .HasForeignKey("OracleGuildId");

                    b.HasOne("TheOracle2.DataClasses.Source", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId");

                    b.Navigation("Source");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.OracleStub", b =>
                {
                    b.HasOne("TheOracle2.DataClasses.ChanceTable", "ChanceTable")
                        .WithMany("Oracles")
                        .HasForeignKey("ChanceTableId");

                    b.HasOne("TheOracle2.DataClasses.Suggest", "Suggest")
                        .WithMany("Oracles")
                        .HasForeignKey("SuggestId");

                    b.Navigation("ChanceTable");

                    b.Navigation("Suggest");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.Special", b =>
                {
                    b.HasOne("OracleData.AssetStatOptions", null)
                        .WithMany("Special")
                        .HasForeignKey("AssetStatOptionsId");

                    b.HasOne("TheOracle2.DataClasses.MoveTrigger", null)
                        .WithMany("Special")
                        .HasForeignKey("MoveTriggerId");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.Subcategory", b =>
                {
                    b.HasOne("TheOracle2.DataClasses.OracleInfo", "OracleInfo")
                        .WithMany("Subcategories")
                        .HasForeignKey("OracleInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TheOracle2.DataClasses.Source", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId");

                    b.Navigation("OracleInfo");

                    b.Navigation("Source");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.Suggest", b =>
                {
                    b.HasOne("TheOracle2.DataClasses.ChanceTable", "ChanceTable")
                        .WithOne("Suggestions")
                        .HasForeignKey("TheOracle2.DataClasses.Suggest", "ChanceTableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChanceTable");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.Tables", b =>
                {
                    b.HasOne("TheOracle2.DataClasses.Oracle", "Oracle")
                        .WithMany("Tables")
                        .HasForeignKey("OracleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Oracle");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.UseWith", b =>
                {
                    b.HasOne("TheOracle2.DataClasses.Oracle", "Oracle")
                        .WithMany("UseWith")
                        .HasForeignKey("OracleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Oracle");
                });

            modelBuilder.Entity("OracleData.Ability", b =>
                {
                    b.Navigation("AlterMoves");
                });

            modelBuilder.Entity("OracleData.AlterMove", b =>
                {
                    b.Navigation("Triggers");
                });

            modelBuilder.Entity("OracleData.Asset", b =>
                {
                    b.Navigation("Abilities");
                });

            modelBuilder.Entity("OracleData.AssetMove", b =>
                {
                    b.Navigation("Triggers");
                });

            modelBuilder.Entity("OracleData.AssetStatOptions", b =>
                {
                    b.Navigation("Special");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.AddTemplate", b =>
                {
                    b.Navigation("Attributes");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.ChanceTable", b =>
                {
                    b.Navigation("Addtemplate");

                    b.Navigation("Gameobject");

                    b.Navigation("Multiplerolls");

                    b.Navigation("Oracles");

                    b.Navigation("Suggestions");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.GameObject", b =>
                {
                    b.Navigation("Attributes");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.Move", b =>
                {
                    b.Navigation("Triggers");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.MoveTrigger", b =>
                {
                    b.Navigation("Special");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.Oracle", b =>
                {
                    b.Navigation("Table");

                    b.Navigation("Tables");

                    b.Navigation("UseWith");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.OracleInfo", b =>
                {
                    b.Navigation("Inherits");

                    b.Navigation("Oracles");

                    b.Navigation("Subcategories");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.Subcategory", b =>
                {
                    b.Navigation("Inherits");

                    b.Navigation("Oracles");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.Suggest", b =>
                {
                    b.Navigation("Gameobject");

                    b.Navigation("Oracles");
                });

            modelBuilder.Entity("TheOracle2.DataClasses.Tables", b =>
                {
                    b.Navigation("Table");
                });

            modelBuilder.Entity("TheOracle2.UserContent.OracleGuild", b =>
                {
                    b.Navigation("Oracles");
                });
#pragma warning restore 612, 618
        }
    }
}
